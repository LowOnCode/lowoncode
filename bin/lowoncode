#! /usr/bin/env node

const program = require('commander')
const lowoncode = require('../index') // require('@lowoncode/runtime')

// Needed for strict modus to quit the process
process.on('unhandledRejection', error => {
  // Will print "unhandledRejection err is not defined"
  console.log('unhandledRejection', error)
  // console.log('unhandledRejection', error.message)
  process.exit()
})

program
  // .requiredOption('-f, --file', 'specify design file', 'design.json')
  .version('0.0.1', '-v, --version', 'outputs the version')
  .option('<file>', 'design file', './design.json')
  .option('-pre, --prefix <path>', 'set prefix', '/')
  .option('-p, --port <port>', 'set port', 5000)
  .option('-m, --monitor', 'enables monitor', true)
  .option('-o, --open', 'opens the designer tool', 'https://lowoncode.com/designer')
  .option('-s, --strict', 'enable strict modus, throws error on faults. If using in code you should handle the "unhandledRejection" event.')
  .option('-c, --components <components>', 'specify components directory', './components')
  .option('-r, --repl', 'enable REPL', false)
  .parse(process.argv)

// console.log(`Cwd: ${process.cwd()}`)

lowoncode.loadFromFile(
  `${process.cwd()}/${program.args[0]}`,
  {
    port: program.port,
    prefix: program.prefix,
    componentDirectory: `${process.cwd()}/${program.components}`,
    monitor: program.monitor,
    strict: program.strict,
    open: program.open,
    repl: program.repl
  })
